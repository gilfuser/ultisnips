snippet _skel "goTidal" b
d1 $ slow $2 $ s "$1*$2" # n (run $2) $0
endsnippet

snippet d1 "d1" w
d1 $ $0
endsnippet

snippet d2 "d2" w
d2 $ $0
endsnippet

snippet d3 "d3" w
d3 $ $0
endsnippet

snippet d4 "d4" w
d4 $ $0
endsnippet

snippet sn "s + n" i
slow $2 $ s "$1*$2" # n (run $2)
endsnippet

snippet so "sound" i
s "$1" $0
endsnippet

# PATTERN TRANSFORMERS

snippet pal "palindrome" i
palindrome $$0
endsnippet

snippet spe "speed" i
speed ( ${1:(sine*1.5)+0.5} ) $2 $0
endsnippet

snippet bra "brak" i
brak $ $0
endsnippet

snippet dby "degradeBy" i
degradeBy ${1:0.2} $0
endsnippet

snippet fa "fast" i
fast ${1:2}
endsnippet

snippet fi "fit" i
(fit $1 ${VISUAL} "$3")
endsnippet

snippet fi' "fit'" i
fit' ${1:2} ${2:3} "$3" "$4" $0
endsnippet

snippet ite "iter" i
iter ${1:4} $$0
endsnippet

snippet jux "juxBy" i
juxBy ${1:0.5} ($2)$0
endsnippet

snippet lin "linger" i
linger ${1:(1/3)} $ $0
endsnippet

snippet eve "every" i
every ${1:4} ${VISUAL} $0
endsnippet

snippet <~> "<~" i
(${1:0.25} <~) $ $0
endsnippet

snippet ~> "~>" i
(${1:0.25} ~>) $ $0
endsnippet

snippet rev "rev" i
(rev) $ $0
endsnippet

snippet scr "scramble" i
scramble ${1:3} $0
endsnippet

snippet shu "shuffle" i
shuffle ${1:6} $0
endsnippet

snippet slo "slow" i
slow ${1:2} $0
endsnippet

snippet sma "smash" i
smash $1 [${2:2}, ${3:3}, ${4:4}] $
endsnippet

snippet spr "spread" i
spread $0$
endsnippet

snippet spr$ "spread ($)" i
spread ($) [ $1, $2, $3 $0]
  ${VISUAL}
endsnippet

snippet tos "toScale" i
toScale [${1:3}, ${2:0}, ${3:-4}] $4 $0
endsnippet

snippet tos' "toScale'" i
toScale' $1 [$2, $3, $4, $5, $6] $7 $0
endsnippet

snippet tru "trunc" i
trunc "<${1:0.25} ${2:0.75}>" $0
endsnippet

snippet zo "zoom" i
zoom (${1:0.25}, ${2:0.75}) ${VISUAL} $
endsnippet

# SAMPLE TRANSFORMERS

snippet loocho "loopAt+chop"
loopAt ${1:<3 4>} $ chop ${2:24} $ $0
endsnippet

snippet gap "gap" i
gap ${1:"[16 12]"} $
endsnippet

snippet ch "chop" i
chop $1 $ $0
endsnippet

snippet str "striate" i
striate $0$
endsnippet

snippet str' "striate'" i
striate' $1 ($2) $
endsnippet

snippet strL "striateL" i
striateL ${1:8} ${2:3} $ $0
endsnippet

snippet strL' "striateL'" i
striateL' ${1:4} ${2:(1/8)} ${3:3} $
endsnippet

snippet stu "stut" i
stut ${1:6} ${2:(1/3)} ${3:(1/6)} $
endsnippet

snippet stu' "stut'" i
stut' ${1:2} ${2:(1/3)} ( # ${VISUAL:coarse "64 16 32 8 2 4"} ) $ $0
endsnippet

# CONDITIONAL TRANSFORMERS

snippet soc "someCyclesBy" i
someCyclesBy ${1:0.25} (${VISUAL}$2) $ $0
endsnippet

snippet som "sometimesBy" i
sometimesBy ${1:0.2} (${VISUAL:brak}$2) $
endsnippet

snippet fol "foldEvery" i
foldEvery ${1:[3, 5, 7]} (${VISUAL:slow 2}) $
endsnippet

snippet ma "mask" i
(mask ("${1:1 ~ 1 1 ~ ~ 1 ~}" :: ))
  (${VISUAL})
  # n (${2: irand 8})
endsnippet

snippet ev "every" i
every $1 (${VISUAL:slow 2}) $ $0
endsnippet

snippet swi "swingBy" i
swingBy (${1:1/3}) ${2:4} $
endsnippet

snippet whem "whenmod" i
whenmod ${1:7} ${2:3} $0
endsnippet

snippet wit "within" i
within (${1:0.25}, ${2:0.75}) (# $3) $ $0
endsnippet

# COMPOSITIONS

snippet spl "seqPLoop"
seqPLoop [
  (0, $1, $2),
  ($1, $3, $4)$0
]
endsnippet

snippet cat "cat"
cat [
  ${VISUAL},
  $2 $0
]
endsnippet

snippet fac "fastcat"
fastcat [
  $1,
  $2 $0
]
endsnippet

snippet inte "interlace"
interlace ($1) ($2)$0
endsnippet

snippet rac "randcat"
randcat [
  $1,
  $2,
  $3 $0
]
endsnippet

snippet app "append"
append ($1)($2)$0
endsnippet

snippet sta "stack"
stack [
  $1,
  $2,
  $3
] $0
endsnippet

snippet sup "superimpose" i
superimpose (${1:# up "-3"}) $$0
endsnippet

snippet wea "weave"
weave ${1:16} (${2:pan sine})[
  $1,
  $2,
  $3
]$0
endsnippet

snippet wea' "weave'"
weave' ${1:16} (${2:pan sine})[
  $1,
  $2,
  $3
]$0
endsnippet

snippet wed "wedge"
wedge (${1:1/3}) ($2) ($3) $0
endsnippet

# TRANSITIONS

snippet ant "anticipateIn"
t$1 (anticipateIn $2) $ ${VISUAL}
$0
endsnippet

snippet clu "clutchIn"
t$1 (clutchIn) $ ${VISUAL}
$0
endsnippet

snippet jui "jumpIn'"
t$1 jumpIn' ${VISUAL}
$0
endsnippet

snippet jum "jumpMod"
t$1 jumpMod $$0 ${VISUAL}
endsnippet

snippet mor "mortal"
t$1 mortal $$0 ${VISUAL}
endsnippet

snippet suw "superwash"
t$1 (superwash ($2)($3) $4 $5 $6) $$0 ${VISUAL}
endsnippet

snippet wai "wait"
t$1 (wait $2) $ ${VISUAL}
endsnippet

snippet was "wash"
t$1 (wash (${2:chop8}) ${3:4}) $$0 ${VISUAL}
endsnippet

snippet xfa "xfadeIn"
t$1 (xfadeIn $2) $$0 ${VISUAL}
endsnippet

# SYNTH PARAMETERS

#snippet hpf "high pass filter"
# hpf $1 # hpq $2 $0
#endsnippet

#snippet bpf "band pass filter"
# bpf $1 # bandf $2 $0
#endsnippet

snippet beg "begin"
# begin $1 $0
endsnippet

snippet coa "coarse"
# coarse $0
endsnippet

snippet cru "crush"
# crush $0
endsnippet

snippet cut "cut"
# cut $1
endsnippet

#snippet lpf "lpf + reso"
# lpf $1 # lpq ${2:0.25} $0
#endsnippet

snippet del "delay"
# delay ${1:0.5} # def ${2:0.5} # det ${3:0.25} $0
endsnippet

snippet end "end"
# end $0
endsnippet

snippet ga "gain"
# gain $0
endsnippet

snippet acc "accelerate"
# accelerate "$1" $0
endsnippet

snippet leg "legato"
# legato $0
endsnippet

snippet loop "loop"
# loop $0
endsnippet

snippet nud "nudge"
# nudge "$1" $0
endsnippet

snippet pan "pan"
# pan "$1" $0
endsnippet

snippet sha "shape"
# shape ${1:0.25} $0
endsnippet

snippet up "up" i
# up "$1" $0
endsnippet

# duration in seconds
snippet sus "sustain"
# sustain $0
endsnippet

snippet unis "unit + speed" 
# unit "c" # speed ${1:1} $0
endsnippet

snippet vow "vowel"
# vowel "${1:e a ~ [i o u]}" $0
endsnippet
snippet orb "orbit"
# orbit $0
endsnippet


# SAMPLES

snippet ain "ainv9" i
ainv9$0
endsnippet

snippet bin "binv12" i
binv12
endsnippet

snippet cin "cinv24" i
cinv24
endsnippet

snippet din "dinv4" i
dinv4
endsnippet

snippet ein "einv8" i
einv8
endsnippet

snippet fin "finv12" i
finv12
endsnippet

snippet gin "ginv24" i
ginv24
endsnippet

